{"version":3,"file":"static/js/415.893432c5.chunk.js","mappings":"4LACaA,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAEnC,OACE,+BACE,SAAC,EAAAC,GAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,EAAAC,GAAD,WACE,UAAC,KAAD,CAAYC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAAhD,WACE,SAAC,KAAD,CACEU,IACEL,EAAW,UATV,oCASU,OACOA,GACd,2HAENM,IAAKP,KAEP,SAAC,KAAD,UAAOA,QAVFD,EADC,OAkBnB,C,yNCtBYS,EAAQC,EAAAA,GAAAA,GAAH,mEAILZ,EAAKY,EAAAA,GAAAA,GAAH,uHAOFP,EAAKO,EAAAA,GAAAA,GAAH,iTAWFC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gMAUVG,EAAMH,EAAAA,GAAAA,IAAH,yCAGHI,EAAOJ,EAAAA,GAAAA,KAAH,qB,gGCnBjB,UAba,WACX,IAAMb,GAAWkB,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,KAAKH,EACpB,GAAE,KAED,iCACE,SAAC,KAAD,+BACA,SAAC,IAAD,CAAYrB,OAAQA,EAAQC,SAAUA,MAG3C,C,+LCfKwB,EAAM,mCAEL,SAAeF,IAAtB,4CAAO,OAAP,oBAAO,qGACkBG,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAQA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAOC,GAAxC,wFACkBR,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASH,EACTQ,MAAAA,EACAC,KAAAA,KALC,cACCL,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,wFACkBV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,GAAW,CAChDT,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,MANX,kEAQA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,wFACkBV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,YAA8B,CACxDT,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,KAAKQ,MANhB,kEAQA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAkCH,GAAlC,wFACkBV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,YAA8B,CACxDT,OAAQ,CACNC,QAASH,KAHR,cACCI,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAnCPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.js","pages/Home.jsx","services/fetchApi.js"],"sourcesContent":["import { Img, Li, LinkStyled, Span, Ul } from './MoviesList.styled';\nexport const MoviesList = ({ movies, location }) => {\n  const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n  return (\n    <>\n      <Ul>\n        {movies.map(({ id, title, poster_path }) => (\n          <Li key={id}>\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={\n                  poster_path\n                    ? `${imageUrl}${poster_path}`\n                    : 'https://e7.pngegg.com/pngimages/84/530/png-clipart-film-clapperboard-computer-icons-cinema-shows-miscellaneous-angle.png'\n                }\n                alt={title}\n              />\n              <Span>{title}</Span>\n            </LinkStyled>\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const Title = styled.h2`\n  text-align: center;\n  padding: 10px 0;\n`;\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  list-style: none;\n  padding: 10px 3px;\n`;\nexport const Li = styled.li`\n  width: 220px;\n  border-radius: 5px;\n  padding-bottom: 3px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover {\n    transform: scale(1.03);\n  }\n  transition: transform 250ms linear;\n`;\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 7px;\n  text-decoration: none;\n  color: #212121;\n  font-size: 18px;\n  font-weight: 700;\n`;\nexport const Img = styled.img`\n  width: 220px;\n`;\nexport const Span = styled.span``;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovies } from 'services/fetchApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Title } from 'components/MoviesList/MoviesList.styled';\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchMovies().then(setMovies);\n  }, []);\n  return (\n    <>\n      <Title>Trending movies</Title>\n      <MoviesList movies={movies} location={location} />\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = 'e7bdbd1d27e36c8088a4364bac7f860e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchMoviesByName(query, page) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      query,\n      page,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchMoviesById(movieId) {\n  const response = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\nexport async function fetchMoviesCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n}\nexport async function fetchMoviesReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\n\n// `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`;\n"],"names":["MoviesList","movies","location","Ul","map","id","title","poster_path","Li","to","state","from","src","alt","Title","styled","LinkStyled","Link","Img","Span","useLocation","useState","setMovies","useEffect","fetchMovies","then","KEY","axios","params","api_key","response","data","results","fetchMoviesByName","query","page","fetchMoviesById","movieId","fetchMoviesCast","cast","fetchMoviesReviews"],"sourceRoot":""}