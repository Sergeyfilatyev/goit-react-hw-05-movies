{"version":3,"file":"static/js/128.d0d582b4.chunk.js","mappings":"4NACaA,EAAKC,EAAAA,GAAAA,GAAH,qGAMFC,EAAKD,EAAAA,GAAAA,GAAH,2JAIFE,EAAQF,EAAAA,GAAAA,GAAH,uEAILG,EAAYH,EAAAA,GAAAA,EAAH,6E,SCbTI,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,SAACN,EAAD,UACGM,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACR,EAAD,YACE,SAACC,EAAD,UAAQM,KACR,SAACL,EAAD,UAAYM,MAFLF,EADE,KAQlB,ECZYJ,EAAYH,EAAAA,GAAAA,EAAH,2LCCTU,EAAsB,WACjC,OAAO,SAAC,EAAD,mDACR,E,2BCiBD,EAhBgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBL,GAASM,KAAKH,EAClC,GAAE,CAACH,KAEF,8BACGN,EAAQa,OAAS,GAChB,SAACd,EAAD,CAAaC,QAASA,KAEtB,SAACK,EAAD,KAIP,C,+LClBKS,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAQA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAOC,GAAxC,wFACkBR,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTS,MAAAA,EACAC,KAAAA,KALC,cACCL,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnB,GAA/B,wFACkBU,EAAAA,EAAAA,GAAM,UAAD,OAAWV,GAAW,CAChDW,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BpB,GAA/B,wFACkBU,EAAAA,EAAAA,GAAM,UAAD,OAAWV,EAAX,YAA8B,CACxDW,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKO,MANhB,kEAQA,SAAehB,EAAtB,kC,aAAO,O,oBAAA,WAAkCL,GAAlC,wFACkBU,EAAAA,EAAAA,GAAM,UAAD,OAAWV,EAAX,YAA8B,CACxDW,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKC,SANhB,kEAnCPL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","components/ReviewsNotification/ReviewsNotification.styled.js","components/ReviewsNotification/ReviewsNotification.jsx","pages/Reviews.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Ul = styled.ul`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nexport const Li = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n  text-align: center;\n`;\nexport const Paragraph = styled.p`\n  border-radius: 5px;\n  background-color: #f7f8e0;\n`;\n","import { Li, Paragraph, Title, Ul } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <Ul>\n      {reviews.map(({ id, author, content }) => (\n        <Li key={id}>\n          <Title>{author}</Title>\n          <Paragraph>{content}</Paragraph>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n","import styled from 'styled-components';\nexport const Paragraph = styled.p`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: #fe642e;\n  font-weight: 700;\n  text-align: center;\n  padding: 20px;\n`;\n","import { Paragraph } from './ReviewsNotification.styled';\n\nexport const ReviewsNotification = () => {\n  return <Paragraph>We don't have reviews for this movie.</Paragraph>;\n};\n","import { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { ReviewsNotification } from 'components/ReviewsNotification/ReviewsNotification';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/fetchApi';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchMoviesReviews(movieId).then(setReviews);\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <ReviewsNotification />\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'e7bdbd1d27e36c8088a4364bac7f860e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport async function fetchMovies() {\n  const response = await axios('trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchMoviesByName(query, page) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      query,\n      page,\n    },\n  });\n  return response.data.results;\n}\nexport async function fetchMoviesById(movieId) {\n  const response = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\nexport async function fetchMoviesCast(movieId) {\n  const response = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n}\nexport async function fetchMoviesReviews(movieId) {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.results;\n}\n\n// `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`;\n"],"names":["Ul","styled","Li","Title","Paragraph","ReviewsList","reviews","map","id","author","content","ReviewsNotification","movieId","useParams","useState","setReviews","useEffect","fetchMoviesReviews","then","length","KEY","fetchMovies","axios","params","api_key","response","data","results","fetchMoviesByName","query","page","fetchMoviesById","fetchMoviesCast","cast"],"sourceRoot":""}